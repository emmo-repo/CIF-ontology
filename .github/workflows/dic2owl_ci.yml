name: CI - dic2owl

on:
  push:
    paths:
      - 'dic2owl/**'
      - 'tests/**'
      - '.github/**'

jobs:
  pre-commit-dic2owl:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools wheel

        while IFS="" read -r line || [ -n "${line}" ]; do
          if [[ "${line}" =~ ^pre-commit.*$ ]]; then
            pre_commit="${line}"
          fi
        done < dic2owl/requirements_dev.txt

        pip install ${pre_commit}

    - name: Run pre-commit
      run: SKIP=pylint pre-commit run --all-files

  pylint-safety:
    name: PyLint and safety
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools wheel

        pip install -U -r dic2owl/requirements.txt -r dic2owl/requirements_dev.txt
        pip install safety

    - name: Run PyLint
      run: pylint --rcfile=dic2owl/pyproject.toml dic2owl/**/*.py

    - name: Run safety
      run: pip freeze | safety check --stdin

  dic2owl-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version:  ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -U setuptools wheel
          pip install -e dic2owl[dev]

      - name: Run unit tests with PyTest
        run: pytest --cov dic2owl tests/
